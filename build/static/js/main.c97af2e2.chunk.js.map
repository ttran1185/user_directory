{"version":3,"sources":["utils/api.js","components/container/index.js","components/searchform/index.js","components/searchresults/index.js","pages/search.js","components/nav/index.js","components/footer/index.js","components/wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","Container","props","className","fluid","SearchForm","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","SearchResults","employees","handleSort","undefined","map","login","picture","email","phone","dob","key","uuid","alt","src","thumbnail","first","last","href","date","substring","Search","state","order","filteredEmployees","event","filter","target","filteredList","person","Object","values","join","toLowerCase","indexOf","setState","sort","a","b","reverse","console","log","sortAscending","sortDescending","API","then","res","data","results","catch","err","style","minHeight","margin","this","Component","Navbar","Footer","Wrapper","App","document","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c97af2e2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployees: () => {\r\n        return axios.get('https://randomuser.me/api/');\r\n    }\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Container(props) {\r\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"language\"></label>\r\n                <input\r\n                    value={props.search}\r\n                    onChange={props.handleInputChange}\r\n                    name=\"search\"\r\n                    list=\"employees\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search any employee name\"\r\n                    id=\"search\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nexport default function SearchResults({ employees, handleSort }) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Photo</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Date of Birth</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{employees[0] !== undefined && employees[0].name !== undefined ? (\r\n                employees.map(({ login, picture, name, email, phone, dob }) => {\r\n                    return (\r\n                        <tr key={login.uuid}>\r\n                            <td>\r\n                                <img alt={`employee`} src={picture.thumbnail}></img>\r\n                            </td>\r\n                            <td>{name.first} {name.last}</td>\r\n                            <td><a href={\"mailto:\" + email}>{email}</a></td>\r\n                            <td>{phone}</td>\r\n                            <td>{dob.date.substring(0, 10)}</td>\r\n                        </tr>\r\n                    )\r\n                })) :\r\n                (\r\n                    <></>\r\n                )\r\n            }</tbody>\r\n        </table>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport API from \"../utils/api\";\r\nimport Container from \"../components/container\";\r\nimport SearchForm from \"../components/searchform\";\r\nimport SearchResults from \"../components/searchresults\";\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        order: \"descending\",\r\n        employees: [{}],\r\n        filteredEmployees: [{}],\r\n    }\r\n    componentDidMount() {\r\n        API.getEmployees()\r\n            .then(res => {\r\n                this.setState({ employees: res.data.results, filteredEmployees: res.data.results })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    handleInputChange = event => {\r\n        const filter = event.target.value;\r\n        const filteredList = this.state.employees.filter(person => {\r\n            let values = Object.values(person).join(\"\").toLowerCase();\r\n            return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n        this.setState({ filteredEmployees: filteredList })\r\n    }\r\n\r\n    handleSort = () => {\r\n        if (this.state.order === \"descending\") {\r\n            this.setState({ order: \"ascending\" })\r\n            const { filteredEmployees } = this.state;\r\n            filteredEmployees.sort((a, b) => a - b)\r\n            this.setState({ filteredEmployees })\r\n        } else {\r\n            this.setState({ order: \"descending\" })\r\n            const { filteredEmployees } = this.state;\r\n            filteredEmployees.sort((a, b) => b - a).reverse();\r\n            this.setState({ filteredEmployees })\r\n        }\r\n        console.log(this.state.order);\r\n    }\r\n    sortAscending = () => {\r\n        const { filteredEmployees } = this.state;\r\n        filteredEmployees.sort((a, b) => a - b)\r\n        this.setState({ filteredEmployees })\r\n    }\r\n    sortDescending = () => {\r\n        const { filteredEmployees } = this.state;\r\n        filteredEmployees.sort((a, b) => a - b).reverse()\r\n        this.setState({ filteredEmployees })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{ minHeight: \"100vh\" }}>\r\n                    <h1 className=\"text-center\" style={{ margin: \"20px\" }}>Employee Directory</h1>\r\n                    <SearchForm\r\n                        handleInputChange={this.handleInputChange}\r\n                    />\r\n                    <SearchResults\r\n                        employees={this.state.filteredEmployees}\r\n                        handleSort={this.handleSort}\r\n                    />\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Search;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer navbar-dark bg-dark\">\r\n            <span>Copyright Â© 2020</span>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\nimport Search from \"./pages/search\";\nimport Nav from \"./components/nav\";\nimport Footer from \"./components/footer\";\nimport Wrapper from './components/wrapper';\nimport \"./App.css\";\n\nfunction App() {\n  document.title = \"Employee Directory\";\n  return (\n    <div>\n      <Nav />\n      <Wrapper>\n        <Search />\n      </Wrapper>\n      <Footer />\n    </div>\n  );\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}